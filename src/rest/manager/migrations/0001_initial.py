# Generated by Django 3.2 on 2021-04-28 09:35

from django.db import migrations, models
from django.contrib.postgres.fields import JSONField
import django.db.models.deletion
import manager.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ActionModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        blank=True,
                        db_column="s_id",
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="Идентификатор",
                    ),
                ),
                (
                    "name",
                    models.TextField(
                        blank=True,
                        db_column="name",
                        null=True,
                        verbose_name="Наименование",
                    ),
                ),
                (
                    "number",
                    models.IntegerField(
                        blank=True,
                        db_column="number",
                        null=True,
                        verbose_name="Порядковый номер",
                    ),
                ),
            ],
            options={
                "verbose_name": "Действие",
                "verbose_name_plural": "Действия",
                "db_table": 'manager"."action',
            },
        ),
        migrations.CreateModel(
            name="BaseTaskLogModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        blank=True,
                        db_column="s_id",
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="Идентификатор",
                    ),
                ),
                (
                    "add_task_date",
                    models.DateTimeField(
                        blank=True,
                        db_column="add_task_date",
                        null=True,
                        verbose_name="Дата постановки базовой задачи",
                    ),
                ),
                (
                    "exec_task_date",
                    models.DateTimeField(
                        blank=True,
                        db_column="exec_task_date",
                        null=True,
                        verbose_name="Дата начала выполнения задачи",
                    ),
                ),
                (
                    "end_task_date",
                    models.DateTimeField(
                        blank=True,
                        db_column="end_task_date",
                        null=True,
                        verbose_name="Дата окончания выполнения задачи",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Аудит выполнения базовых задач",
                "db_table": 'manager"."base_task_log',
            },
        ),
        migrations.CreateModel(
            name="BaseTaskModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        blank=True,
                        db_column="s_id",
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="Идентификатор",
                    ),
                ),
                (
                    "name",
                    models.TextField(
                        blank=True,
                        db_column="name",
                        null=True,
                        verbose_name="Наименование",
                    ),
                ),
            ],
            options={
                "verbose_name": "Базовая задача",
                "verbose_name_plural": "Базовые задачи",
                "db_table": 'manager"."base_task',
            },
        ),
        migrations.CreateModel(
            name="CommandLogModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        blank=True,
                        db_column="s_id",
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="Идентификатор",
                    ),
                )
            ],
            options={
                "verbose_name_plural": "Аудит выполнения команд",
                "db_table": 'manager"."command_log',
            },
        ),
        migrations.CreateModel(
            name="ModuleModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        blank=True,
                        db_column="s_id",
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="Идентификатор",
                    ),
                ),
                (
                    "name",
                    models.TextField(
                        blank=True,
                        db_column="name",
                        null=True,
                        verbose_name="Наименование",
                    ),
                ),
                (
                    "system_name",
                    models.TextField(
                        blank=True,
                        db_column="system_name",
                        null=True,
                        verbose_name="Системное наименование",
                    ),
                ),
                (
                    "channel_name",
                    models.TextField(
                        blank=True,
                        db_column="channel_name",
                        null=True,
                        verbose_name="Наименование канала",
                    ),
                ),
                (
                    "status",
                    models.BooleanField(
                        blank=True,
                        db_column="status",
                        default=False,
                        verbose_name="Статус работоспособности",
                    ),
                ),
            ],
            options={"verbose_name_plural": "Службы", "db_table": 'manager"."module'},
        ),
        migrations.CreateModel(
            name="TaskModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        blank=True,
                        db_column="s_id",
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="Идентификатор",
                    ),
                ),
                (
                    "name",
                    models.TextField(
                        blank=True,
                        db_column="name",
                        null=True,
                        verbose_name="Наименование",
                    ),
                ),
            ],
            options={"verbose_name_plural": "Задачи", "db_table": 'manager"."task'},
        ),
        migrations.CreateModel(
            name="TaskStatusModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        blank=True,
                        db_column="s_id",
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="Идентификатор",
                    ),
                ),
                (
                    "name",
                    models.TextField(
                        blank=True,
                        db_column="name",
                        null=True,
                        verbose_name="Наименование",
                    ),
                ),
                (
                    "system_name",
                    models.TextField(
                        blank=True,
                        db_column="system_name",
                        null=True,
                        verbose_name="Системное наименование",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Статусы выполнения задачи",
                "db_table": 'manager"."task_status',
            },
        ),
        migrations.CreateModel(
            name="TaskSequenceModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        blank=True,
                        db_column="s_id",
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="Идентификатор",
                    ),
                ),
                (
                    "number",
                    models.IntegerField(
                        blank=True,
                        db_column="number",
                        null=True,
                        verbose_name="Порядковый номер",
                    ),
                ),
                (
                    "base_task",
                    models.ForeignKey(
                        blank=True,
                        db_column="base_task_id",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="task_sequence_list",
                        to="manager.basetaskmodel",
                        verbose_name="Базовая задача",
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        blank=True,
                        db_column="task_id",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="task_sequence_list",
                        to="manager.taskmodel",
                        verbose_name="Задача",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Последовательность задач",
                "db_table": 'manager"."task_sequence',
            },
        ),
        migrations.CreateModel(
            name="TaskLogModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        blank=True,
                        db_column="s_id",
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="Идентификатор",
                    ),
                ),
                (
                    "action",
                    models.ForeignKey(
                        blank=True,
                        db_column="action_id",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="task_log_list",
                        to="manager.actionmodel",
                        verbose_name="Операция",
                    ),
                ),
                (
                    "main_task_log",
                    models.ForeignKey(
                        blank=True,
                        db_column="main_task_log_id",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="task_log_list",
                        to="manager.basetasklogmodel",
                        verbose_name="Аудит выполнения базовых задач",
                    ),
                ),
                (
                    "status",
                    models.ForeignKey(
                        blank=True,
                        db_column="status_id",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="task_log_list",
                        to="manager.taskstatusmodel",
                        verbose_name="Статус выполнения задач",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Аудит выполнения задач",
                "db_table": 'manager"."task_log',
            },
        ),
        migrations.CreateModel(
            name="ObjectToTaskLogModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        blank=True,
                        db_column="s_id",
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="Идентификатор",
                    ),
                ),
                (
                    "related_object",
                    models.UUIDField(
                        blank=True,
                        db_column="object_id",
                        null=True,
                        verbose_name="Идентификатор объекта",
                    ),
                ),
                (
                    "task_log",
                    models.ForeignKey(
                        blank=True,
                        db_column="task_log_id",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="object_to_task_log_list",
                        to="manager.tasklogmodel",
                        verbose_name="Аудит выполнения задач",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Аудит выполнения задач - Объекты",
                "db_table": 'manager"."object_to_task_log',
            },
        ),
        migrations.CreateModel(
            name="ObjectToCommandLogModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        blank=True,
                        db_column="s_id",
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="Идентификатор",
                    ),
                ),
                (
                    "related_object",
                    models.UUIDField(
                        blank=True,
                        db_column="object_id",
                        null=True,
                        verbose_name="Идентификатор объекта",
                    ),
                ),
                (
                    "command_log",
                    models.ForeignKey(
                        blank=True,
                        db_column="command_log_id",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="object_to_command_log_list",
                        to="manager.commandlogmodel",
                        verbose_name="Команда",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Аудит выполнения команд - Объекты",
                "db_table": 'manager"."object_to_command_log',
            },
        ),
        migrations.CreateModel(
            name="MethodModuleModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        blank=True,
                        db_column="s_id",
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="Идентификатор",
                    ),
                ),
                (
                    "name",
                    models.TextField(
                        blank=True,
                        db_column="name",
                        null=True,
                        verbose_name="Наименование",
                    ),
                ),
                (
                    "system_name",
                    models.TextField(
                        blank=True,
                        db_column="system_name",
                        null=True,
                        verbose_name="Системное наименование",
                    ),
                ),
                (
                    "module",
                    models.ForeignKey(
                        blank=True,
                        db_column="module_id",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="method_list",
                        to="manager.modulemodel",
                        verbose_name="Служба",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Методы служб",
                "db_table": 'manager"."method_module',
            },
        ),
        migrations.CreateModel(
            name="MessageModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        blank=True,
                        db_column="s_id",
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="Идентификатор",
                    ),
                ),
                (
                    "data",
                    JSONField(
                        blank=True,
                        db_column="data",
                        null=True,
                        verbose_name="Данные сообщения",
                    ),
                ),
                (
                    "msg_type",
                    models.TextField(
                        blank=True,
                        choices=[
                            (manager.models.MsgTypeChoice["connect"], "Подключение"),
                            (manager.models.MsgTypeChoice["task"], "Задача"),
                            (manager.models.MsgTypeChoice["info"], "Информация"),
                            (manager.models.MsgTypeChoice["success"], "Выполнено"),
                            (manager.models.MsgTypeChoice["error"], "Ошибка"),
                            (manager.models.MsgTypeChoice["warning"], "Внимание"),
                        ],
                        db_column="msg_type",
                        null=True,
                        verbose_name="Тип сообщения",
                    ),
                ),
                (
                    "status",
                    models.TextField(
                        blank=True,
                        choices=[
                            (manager.models.StatusSendChoice["sent"], "Отправлено"),
                            (manager.models.StatusSendChoice["recd"], "Получено"),
                            (manager.models.StatusSendChoice["ok"], "Обработано"),
                        ],
                        db_column="status",
                        null=True,
                        verbose_name="Статус отправки",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        blank=True,
                        db_column="date_created",
                        null=True,
                        verbose_name="Дата и время создания",
                    ),
                ),
                (
                    "command_log",
                    models.ForeignKey(
                        blank=True,
                        db_column="command_log_id",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="message_list",
                        to="manager.commandlogmodel",
                        verbose_name="Аудит выполнения команд",
                    ),
                ),
                (
                    "parent_msg",
                    models.ForeignKey(
                        blank=True,
                        db_column="parent_msg_id",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="child_list",
                        to="manager.messagemodel",
                        verbose_name="Родительское сообщение",
                    ),
                ),
                (
                    "recipient",
                    models.ForeignKey(
                        blank=True,
                        db_column="recipient_id",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recipient_message_list",
                        to="manager.modulemodel",
                        verbose_name="Получатель",
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        blank=True,
                        db_column="sender_id",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="send_message_list",
                        to="manager.modulemodel",
                        verbose_name="Отправитель",
                    ),
                ),
                (
                    "task_log",
                    models.ForeignKey(
                        blank=True,
                        db_column="task_log_id",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="message_list",
                        to="manager.tasklogmodel",
                        verbose_name="Аудит выполнения задач",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Сообщения",
                "db_table": 'manager"."message',
            },
        ),
        migrations.CreateModel(
            name="CommandModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        blank=True,
                        db_column="s_id",
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="Идентификатор",
                    ),
                ),
                (
                    "name",
                    models.TextField(
                        blank=True,
                        db_column="name",
                        null=True,
                        verbose_name="Наименование",
                    ),
                ),
                (
                    "is_parallel",
                    models.BooleanField(
                        blank=True,
                        db_column="is_parallel",
                        default=False,
                        verbose_name="Признак параллельности",
                    ),
                ),
                (
                    "number",
                    models.IntegerField(
                        blank=True,
                        db_column="number",
                        null=True,
                        verbose_name="Порядковый номер",
                    ),
                ),
                (
                    "action",
                    models.ForeignKey(
                        blank=True,
                        db_column="action_id",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="command_list",
                        to="manager.actionmodel",
                        verbose_name="Операция",
                    ),
                ),
                (
                    "method",
                    models.ForeignKey(
                        blank=True,
                        db_column="method_id",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="command_list",
                        to="manager.methodmodulemodel",
                        verbose_name="Метод",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        db_column="parent_id",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="command_list",
                        to="manager.commandmodel",
                        verbose_name="Родительская команда",
                    ),
                ),
            ],
            options={
                "verbose_name": "Команда",
                "verbose_name_plural": "Команды",
                "db_table": 'manager"."command',
            },
        ),
        migrations.AddField(
            model_name="commandlogmodel",
            name="command",
            field=models.ForeignKey(
                blank=True,
                db_column="command_id",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="command_log_list",
                to="manager.commandmodel",
                verbose_name="Команда",
            ),
        ),
        migrations.AddField(
            model_name="commandlogmodel",
            name="parent",
            field=models.ForeignKey(
                blank=True,
                db_column="parent_id",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="command_log_list",
                to="manager.commandlogmodel",
                verbose_name="Родительская команда",
            ),
        ),
        migrations.AddField(
            model_name="commandlogmodel",
            name="status",
            field=models.ForeignKey(
                blank=True,
                db_column="status_id",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="command_log_list",
                to="manager.taskstatusmodel",
                verbose_name="Статус выполнения задач",
            ),
        ),
        migrations.AddField(
            model_name="commandlogmodel",
            name="task_log",
            field=models.ForeignKey(
                blank=True,
                db_column="task_log_id",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="command_log_list",
                to="manager.tasklogmodel",
                verbose_name="Аудит выполнения задач",
            ),
        ),
        migrations.AddField(
            model_name="basetasklogmodel",
            name="base_task",
            field=models.ForeignKey(
                blank=True,
                db_column="base_task_id",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="main_task_log_list",
                to="manager.basetaskmodel",
                verbose_name="Базовая задача",
            ),
        ),
        migrations.AddField(
            model_name="basetasklogmodel",
            name="status",
            field=models.ForeignKey(
                blank=True,
                db_column="status_id",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="main_task_log_list",
                to="manager.taskstatusmodel",
                verbose_name="Статус выполнения задачи",
            ),
        ),
        migrations.AddField(
            model_name="actionmodel",
            name="method",
            field=models.ForeignKey(
                blank=True,
                db_column="method_id",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="action_list",
                to="manager.methodmodulemodel",
                verbose_name="Метод",
            ),
        ),
        migrations.AddField(
            model_name="actionmodel",
            name="task",
            field=models.ForeignKey(
                blank=True,
                db_column="task_id",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="action_list",
                to="manager.taskmodel",
                verbose_name="Задача",
            ),
        ),
    ]
